// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrderApi.Infrastructure.Data;

#nullable disable

namespace OrderApi.Migrations
{
    [DbContext(typeof(OrdersDbContext))]
    partial class OrdersDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("OrderApi.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Total")
                        .HasColumnType("TEXT");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = new Guid("6a05285b-fb73-4e61-8b2a-bfebf43bb4eb"),
                            CreatedAt = new DateTime(2025, 6, 11, 8, 0, 6, 756, DateTimeKind.Utc).AddTicks(8037),
                            CustomerName = "Sample Customer",
                            Total = 0m
                        });
                });

            modelBuilder.Entity("OrderApi.Domain.Entities.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a2b5258d-26fc-4ba3-bc9c-6b1891c54f46"),
                            OrderId = new Guid("6a05285b-fb73-4e61-8b2a-bfebf43bb4eb"),
                            ProductId = new Guid("0ea75b43-3cdb-41d2-9937-6abfd6c085b8"),
                            Quantity = 2
                        },
                        new
                        {
                            Id = new Guid("07957b36-919c-4db7-bca4-2c8a1c81cb72"),
                            OrderId = new Guid("6a05285b-fb73-4e61-8b2a-bfebf43bb4eb"),
                            ProductId = new Guid("0ee9a0fa-f6d4-4a64-8a05-38bfc811e82d"),
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("OrderApi.Domain.Entities.OrderItem", b =>
                {
                    b.HasOne("OrderApi.Domain.Entities.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("OrderApi.Domain.Entities.Order", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
